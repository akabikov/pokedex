{"version":3,"sources":["Pokecard.jsx","pokemons.js","Pokedex.jsx","Pokegame.jsx","App.js","index.js"],"names":["Pokecard","id","slice","this","props","pokemon","name","type","base_experience","className","src","getImgSrc","alt","React","Component","Pokedex","pokemons","map","p","key","isWinner","exp","defaultProps","Pokegame","array","shuffled","i","length","j","Math","floor","random","middle","reduce","sum","el","hands","winnerIndex","indexOfMax","current","index","arr","shuffle","cut","cards","getTotalExperience","setWinner","dealCards","h","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a43cdc8.chunk.js","sourcesContent":["// Shows a single Pokemon, with their name, image, and type.\r\n\r\nimport React from 'react';\r\nimport './Pokecard.css';\r\n\r\nclass Pokecard extends React.Component {\r\n    getImgSrc(id) {\r\n        const addZeros = n => `00${n}`.slice(-3);\r\n    \r\n        return `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${addZeros(id)}.png`;\r\n    }\r\n\r\n    render() {\r\n        const {id, name, type, base_experience} = this.props.pokemon;\r\n        return (\r\n            <div className=\"pokecard\">\r\n                <h2>{name}</h2>\r\n                <img \r\n                    src={this.getImgSrc(id)} \r\n                    alt={name}\r\n                />\r\n                <div>Type: {type}</div>\r\n                <div>EXP: {base_experience}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokecard;","export default [\r\n    {id: 4, name: 'Charmander', type: 'fire', base_experience: 62},\r\n    {id: 7, name: 'Squirtle', type: 'water', base_experience: 63},\r\n    {id: 11, name: 'Metapod', type: 'bug', base_experience: 72},\r\n    {id: 12, name: 'Butterfree', type: 'flying', base_experience: 178},\r\n    {id: 25, name: 'Pikachu', type: 'electric', base_experience: 112},\r\n    {id: 39, name: 'Jigglypuff', type: 'normal', base_experience: 95},\r\n    {id: 94, name: 'Gengar', type: 'poison', base_experience: 225},\r\n    {id: 133, name: 'Eevee', type: 'normal', base_experience: 65}\r\n  ]\r\n\r\n// For each pokemon, their image source should be:\r\n// https://assets.pokemon.com/assets/cms2/img/pokedex/detail/${id}.png\r\n\r\n// Note that the pokemon id for these images must be padded with zeros to three places, \r\n// like: 001, 002, 034, 199, etc. Try writing a function to take an id like 4 and turn it into 004.\r\n","// Is provided, via props, an array of objects describing different pokemon, \r\n// and renders a series of Pokecard components.\r\n\r\nimport React from 'react';\r\nimport Pokecard from \"./Pokecard\";\r\nimport pokemons from \"./pokemons\";\r\nimport './Pokedex.css';\r\n\r\nclass Pokedex extends React.Component {\r\n    static defaultProps = { pokemons }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"pokedex-title\">\r\n                    \r\n                </h1>\r\n                <ul className=\"pokedex-container\">\r\n                    { this.props.pokemons.map(p => (\r\n                    <li key={p.id}>\r\n                        <Pokecard pokemon={p} />\r\n                    </li>\r\n                    )) }\r\n                </ul>\r\n                \r\n                {this.props.isWinner ? \r\n                <p className=\"pokedex-winner-message\">THIS HAND WINS!</p> : \r\n                <p className=\"pokedex-loser-message\">THIS HAND LOSE</p>}\r\n                <p className=\"pokedex-experience\">Total experience: {this.props.exp}</p>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokedex;","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport pokemons from \"./pokemons\";\r\n\r\nclass Pokegame extends React.Component {\r\n    shuffle(array) {\r\n        let shuffled = [...array];\r\n\r\n        for(let i = shuffled.length - 1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * (i + 1));\r\n            [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n        }\r\n\r\n        return shuffled;\r\n    }\r\n\r\n    cut(array) {\r\n        let middle = Math.floor(array.length / 2);\r\n\r\n        return [array.slice(0, middle), \r\n                array.slice(middle, middle * 2)];\r\n    }\r\n    \r\n    getTotalExperience(array) {\r\n        return array.reduce((sum, el) => sum + el.base_experience, 0);\r\n    }\r\n\r\n    setWinner(hands) {\r\n        let winnerIndex = hands.reduce((indexOfMax, current, index, arr) => (\r\n            current.exp > arr[indexOfMax].exp ? index : indexOfMax\r\n        ), 0);\r\n        \r\n        hands[winnerIndex].isWinner = true;\r\n\r\n        return hands;\r\n    }\r\n\r\n    dealCards(array) {\r\n        let shuffled = this.shuffle(array);\r\n        let cutted = this.cut(shuffled);\r\n        let hands = cutted.map(el => ({\r\n            cards : el,\r\n            exp : this.getTotalExperience(el),\r\n            isWinner : false\r\n        }));\r\n        \r\n        return this.setWinner(hands);\r\n    }\r\n\r\n    render() {\r\n        let hands = this.dealCards(pokemons);\r\n\r\n        return (\r\n            <div>\r\n                {hands.map((h, i) => (\r\n                    <div key={i}>\r\n                    <Pokedex \r\n                        pokemons={h.cards} \r\n                        exp={h.exp} \r\n                        isWinner={h.isWinner}\r\n                    />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Pokegame;\r\n","import React from 'react';\nimport './App.css';\nimport Pokegame from \"./Pokegame\";\n\nfunction App() {\n  return (\n    <Pokegame />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}